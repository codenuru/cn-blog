### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  error: String
  token: String
  user: User
}

type BatchPayload {
  count: Int
}

type Category {
  id: Int
  name: String
  postCount: Int
  posts: [Post]
  slug: String
}

type Comment {
  author: User
  authorId: Int
  contain: String
  createdAt: DateTime
  id: Int
  post: Post
  postId: Int
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  changePassword(newPassword: String!, oldPassword: String!): User

  """Login mutation: Send your email and password then get back a token"""
  userLogin(
    """email of the user"""
    email: String!

    """password of the user"""
    password: String!
  ): AuthPayload

  """
  Call this mutation to sign a new user up. It will return a auth payload
  """
  userSignup(email: String!, name: String, password: String!, surname: String): AuthPayload
}

type Post {
  author: User
  authorId: Int
  categories: [Category]
  commentCount: Int
  comments: [Comment]
  content: String
  createdAt: DateTime!
  id: Int
  likeCount: Int
  published: Boolean
  tags: [Tag]
  title: String
  updatedAt: DateTime
  viewCount: Int
}

type Query {
  categories(skip: Int, take: Int): [Category]
  findOneCategory(categoryId: Int!): Category
  findOneComment(commentId: Int!): Comment
  findOnePost(postId: Int!): Post
  findOneTag(tagId: Int!): Tag
  findOneUser(userId: Int!): User

  """The current authenticated User"""
  me: User
  posts(skip: Int, take: Int): [Post]
  tags(skip: Int, take: Int): [Tag]
  users(skip: Int, take: Int): [User]
}

"""User Role"""
enum RoleEnum {
  ADMIN
  SUPER_USER
  USER
}

type Tag {
  id: Int
  name: String
  postCount: Int
  posts: [Post]
  slug: String
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""A user registered with the application"""
type User {
  comments: [Comment]
  createdAt: DateTime!
  email: String
  fullName: String
  id: Int
  isDeleted: Boolean
  name: String
  password: String!
  posts: [Post]
  role: RoleEnum
  surname: String
}
